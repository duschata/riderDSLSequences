/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import com.github.database.rider.core.DBUnitRule;
import com.github.database.rider.core.api.dataset.SeedStrategy;
import com.github.database.rider.core.configuration.DBUnitConfig;
import com.github.database.rider.core.configuration.DataSetConfig;
import com.github.database.rider.core.dsl.RiderDSL;
import com.github.database.rider.core.util.EntityManagerProvider;
import model.User;
import org.junit.Rule;
import org.junit.Test;

import java.sql.Connection;
import java.sql.SQLException;

public class RiderTest {

    @Rule
    public EntityManagerProvider emProvider = EntityManagerProvider.instance("h2DBLocal");

    @Rule
    public DBUnitRule dbUnitRule = DBUnitRule.instance(emProvider.connection());

    @Test
    public void doFoo() throws SQLException {

        DataSetConfig datasetConfig = new DataSetConfig("user.xml", "other.xml");
        datasetConfig.
                cleanAfter(false).
                cleanBefore(true).
                disableConstraints(true).
                strategy(SeedStrategy.CLEAN_INSERT);

        DBUnitConfig config = new DBUnitConfig();
        config.columnSensing(true);

        Connection connection = emProvider.connection();
        RiderDSL.DataSetConfigDSL riderDSL = RiderDSL.withConnection(connection);

        RiderDSL.DBUnitConfigDSL dbUnitConfig = riderDSL.withDataSetConfig(datasetConfig);
        dbUnitConfig.withDBUnitConfig(config);
        dbUnitConfig.createDataSet();

        emProvider.connection().commit();

        emProvider.getEm().getTransaction().begin();

        User user = new User("user_new", "user_new", "user_new");
        emProvider.getEm().persist(user);

        emProvider.getEm().getTransaction().commit();

    }
}
